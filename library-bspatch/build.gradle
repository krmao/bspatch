buildscript {
    ext.kotlin_version = '1.2.51'
    ext.dokka_version = '0.9.17'
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven { url 'https://dl.bintray.com/minyushov/gradle' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokka_version"
        classpath "com.android.tools.build:gradle:3.1.3"
    }
}

/**
 * about publish to JCenter
 *
 * @link https://android.jlelse.eu/publishing-your-android-kotlin-or-java-library-to-jcenter-from-android-studio-1b24977fe450
 * @link https://medium.com/bcgdv-engineering/how-to-publish-a-kotlin-android-library-to-jcenter-1f1875633ece
 * @link https://github.com/dcendents/android-maven-gradle-plugin
 * @link https://github.com/bintray/gradle-bintray-plugin
 */
plugins {
    id "com.github.dcendents.android-maven" version "2.1" apply false
    id "com.jfrog.bintray" version "1.8.4" apply false
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
}

subprojects {
    tasks.withType(Javadoc).all {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
        excludes = ['**/*.kt']
        enabled = false
    }
}

apply plugin: 'com.android.library'
apply plugin: "kotlin-android"
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka-android'

ext {
    minSdkVersion = 15

    name = "bspatch"
    versionCode = 1
    versionName = "0.0.2"

    bintrayRepo = "maven"
    bintrayName = "com.smart.library.util.bspatch"
    libraryName = "bspatch"

    publishedGroupId = "com.smart.library.util"
    artifact = "bspatch"
    libraryVersion = rootProject.ext.versionName

    libraryDescription = "bspatch utils for android"
    siteUrl = "https://github.com/krmao/bspatch"
    gitUrl = "https://github.com/krmao/bspatch.git"
    developerId = "krmao"
    developerName = "michael mao"
    developerEmail = "mkrcpp@qq.com"
    licenseName = "The Apache Software License, Version 2.0"
    licenseUrl = "http://www.apache.org/licenses/LICENSE-2.0.txt"
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion

        //noinspection OldTargetApi
        targetSdkVersion 25

        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        archivesBaseName = "${rootProject.ext.name}-${rootProject.ext.versionName}"

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_PLATFORM=android-${rootProject.ext.minSdkVersion}"
                // explicitly build libs
                targets 'bspatch' // 不填就是全部编译
            }
        }

        ndk {
            // Supported ABIs are [armeabi-v7a, arm64-v8a, x86, x86_64]
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }

    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                proguardFile 'proguard-rules.pro'
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    /*android.libraryVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = output.outputFile.name.replaceAll(variant.name, "${variant.name}-${rootProject.ext.versionName}")
        }
    }*/

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

repositories {
    mavenCentral()
}

/**
 * publish to JCenter
 *
 * 1: config local.properties:
 *      bintray.user=           at https://bintray.com/krmao        -> USER NAME
 *      bintray.apikey=         at https://bintray.com/profile/edit -> API KEY
 *
 * 2: config info in ext
 *
 * 3: ./gradlew clean build bintrayUpload --stacktrace
 *
 *      > Task :bintrayUpload
 *      Uploading to https://api.bintray.com/content/krmao/maven/com.smart.library.util.bspatch/0.0.2/com/smart/library/util/bspatch/0.0.2/bspatch-0.0.2.pom...
 *      Uploaded to 'https://api.bintray.com/content/krmao/maven/com.smart.library.util.bspatch/0.0.2/com/smart/library/util/bspatch/0.0.2/bspatch-0.0.2.pom'.
 *      Uploading to https://api.bintray.com/content/krmao/maven/com.smart.library.util.bspatch/0.0.2/com/smart/library/util/bspatch/0.0.2/bspatch-0.0.2-javadoc.jar...
 *      Uploaded to 'https://api.bintray.com/content/krmao/maven/com.smart.library.util.bspatch/0.0.2/com/smart/library/util/bspatch/0.0.2/bspatch-0.0.2-javadoc.jar'.
 *      Uploading to https://api.bintray.com/content/krmao/maven/com.smart.library.util.bspatch/0.0.2/com/smart/library/util/bspatch/0.0.2/bspatch-0.0.2-sources.jar...
 *      Uploaded to 'https://api.bintray.com/content/krmao/maven/com.smart.library.util.bspatch/0.0.2/com/smart/library/util/bspatch/0.0.2/bspatch-0.0.2-sources.jar'.
 *      Uploading to https://api.bintray.com/content/krmao/maven/com.smart.library.util.bspatch/0.0.2/com/smart/library/util/bspatch/0.0.2/bspatch-0.0.2.aar...
 *      Uploaded to 'https://api.bintray.com/content/krmao/maven/com.smart.library.util.bspatch/0.0.2/com/smart/library/util/bspatch/0.0.2/bspatch-0.0.2.aar'.
 *      BUILD SUCCESSFUL in 1m 3s
 *
 * 4: send message to bintray by clicked linked button 'Add to JCenter' at (https://bintray.com/krmao/maven/com.smart.library.util.bspatch)
 *
 * 5: api 'com.smart.library.util:bspatch:0.0.2'
 *
 * 6: article about publish to JCenter
 *
 * @link https://android.jlelse.eu/publishing-your-android-kotlin-or-java-library-to-jcenter-from-android-studio-1b24977fe450
 * @link https://medium.com/bcgdv-engineering/how-to-publish-a-kotlin-android-library-to-jcenter-1f1875633ece
 * @link https://github.com/dcendents/android-maven-gradle-plugin
 * @link https://github.com/bintray/gradle-bintray-plugin
 */
dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

if (rootProject.file('local.properties').exists()) {
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
    // apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
    apply from: 'bintrayv1.gradle'
}